/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ReentranceAttacker,
  ReentranceAttackerInterface,
} from "../../../reentrancy/ReentranceAttacker.sol/ReentranceAttacker";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract IReentrance",
        name: "target",
        type: "address",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x6080604052600160035534801561001557600080fd5b50600080546001600160a01b03191633179055610405806100376000396000f3fe6080604052600436106100225760003560e01c80634b64e492146100f957600080fd5b366100f4576001546003546001600160a01b0390911690600214801561005057506001600160a01b03811615155b156100de576001600160a01b0381163180156100dc576002546000818310610078578161007a565b825b600154604051632e1a7d4d60e01b8152600481018390529192506001600160a01b031690632e1a7d4d90602401600060405180830381600087803b1580156100c157600080fd5b505af11580156100d5573d6000803e3d6000fd5b5050505050505b005b6000546100dc906001600160a01b03163461010c565b600080fd5b6100dc6101073660046103c8565b6101bc565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610159576040519150601f19603f3d011682016040523d82523d6000602084013e61015e565b606091505b505080915050806101b65760405162461bcd60e51b815260206004820152600f60248201527f73656e6420657468206661696c6564000000000000000000000000000000000060448201526064015b60405180910390fd5b92915050565b60035460011461020e5760405162461bcd60e51b815260206004820152600a60248201527f7265656e7472616e63790000000000000000000000000000000000000000000060448201526064016101ad565b6002600355346102605760405162461bcd60e51b815260206004820152600860248201527f6e6565642065746800000000000000000000000000000000000000000000000060448201526064016101ad565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03831690811790915534600281905560405162362a9560e01b815230600482015262362a9591906024016000604051808303818588803b1580156102c557600080fd5b505af11580156102d9573d6000803e3d6000fd5b5050604051632e1a7d4d60e01b81523460048201526001600160a01b0385169350632e1a7d4d92506024019050600060405180830381600087803b15801561032057600080fd5b505af1158015610334573d6000803e3d6000fd5b50506001805473ffffffffffffffffffffffffffffffffffffffff191690555050600060025547806103a85760405162461bcd60e51b815260206004820152600960248201527f6e6f2070726f666974000000000000000000000000000000000000000000000060448201526064016101ad565b6000546103be906001600160a01b03168261010c565b5050600160035550565b6000602082840312156103da57600080fd5b81356001600160a01b03811681146103f157600080fd5b939250505056fea164736f6c634300080d000a";

type ReentranceAttackerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReentranceAttackerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReentranceAttacker__factory extends ContractFactory {
  constructor(...args: ReentranceAttackerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ReentranceAttacker> {
    return super.deploy(overrides || {}) as Promise<ReentranceAttacker>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ReentranceAttacker {
    return super.attach(address) as ReentranceAttacker;
  }
  override connect(signer: Signer): ReentranceAttacker__factory {
    return super.connect(signer) as ReentranceAttacker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReentranceAttackerInterface {
    return new utils.Interface(_abi) as ReentranceAttackerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReentranceAttacker {
    return new Contract(address, _abi, signerOrProvider) as ReentranceAttacker;
  }
}
