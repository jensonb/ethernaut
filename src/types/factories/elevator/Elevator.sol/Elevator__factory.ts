/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Elevator,
  ElevatorInterface,
} from "../../../elevator/Elevator.sol/Elevator";

const _abi = [
  {
    inputs: [],
    name: "floor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_floor",
        type: "uint256",
      },
    ],
    name: "goTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "top",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061024a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80634069536314610046578063ed9a713414610064578063fe6dcdba14610092575b600080fd5b61004e6100b2565b6040518082815260200191505060405180910390f35b6100906004803603602081101561007a57600080fd5b81019080803590602001909291905050506100b8565b005b61009a610203565b60405180821515815260200191505060405180910390f35b60015481565b60003390508073ffffffffffffffffffffffffffffffffffffffff16635f9a4bca836040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b15801561011057600080fd5b505af1158015610124573d6000803e3d6000fd5b505050506040513d602081101561013a57600080fd5b81019080805190602001909291905050506101ff57816001819055508073ffffffffffffffffffffffffffffffffffffffff16635f9a4bca6001546040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156101ab57600080fd5b505af11580156101bf573d6000803e3d6000fd5b505050506040513d60208110156101d557600080fd5b81019080805190602001909291905050506000806101000a81548160ff0219169083151502179055505b5050565b60008054906101000a900460ff168156fea26469706673582212208407d6b16401e076b128e5b83727250ca8c444d927431339bb4864b18bf61c4764736f6c634300060c0033";

type ElevatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ElevatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Elevator__factory extends ContractFactory {
  constructor(...args: ElevatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Elevator> {
    return super.deploy(overrides || {}) as Promise<Elevator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Elevator {
    return super.attach(address) as Elevator;
  }
  override connect(signer: Signer): Elevator__factory {
    return super.connect(signer) as Elevator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ElevatorInterface {
    return new utils.Interface(_abi) as ElevatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Elevator {
    return new Contract(address, _abi, signerOrProvider) as Elevator;
  }
}
