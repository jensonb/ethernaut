/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Ethernaut,
  EthernautInterface,
} from "../../../ethernaut/Ethernaut.sol/Ethernaut";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "attack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "target",
    outputs: [
      {
        internalType: "contract ICoinFlip",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516102e33803806102e383398101604081905261002f91610062565b60008054336001600160a01b031991821617909155600180549091166001600160a01b0392909216919091179055610092565b60006020828403121561007457600080fd5b81516001600160a01b038116811461008b57600080fd5b9392505050565b610242806100a16000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80639e5faafc1461003b578063d4b8399214610045575b600080fd5b610043610074565b005b600154610058906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6000546001600160a01b031633146100d35760405162461bcd60e51b815260206004820152600c60248201527f756e617574686f72697a6564000000000000000000000000000000000000000060448201526064015b60405180910390fd5b60006100e06001436101c5565b40905060006100f3600160ff1b836101ea565b600114610101576000610104565b60015b600154604051631d263f6760e01b815282151560048201529192506001600160a01b031690631d263f67906024016020604051808303816000875af1158015610151573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610175919061020c565b6101c15760405162461bcd60e51b815260206004820152600560248201527f77726f6e6700000000000000000000000000000000000000000000000000000060448201526064016100ca565b5050565b6000828210156101e557634e487b7160e01b600052601160045260246000fd5b500390565b60008261020757634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561021e57600080fd5b8151801515811461022e57600080fd5b939250505056fea164736f6c634300080d000a";

type EthernautConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EthernautConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Ethernaut__factory extends ContractFactory {
  constructor(...args: EthernautConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    target_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Ethernaut> {
    return super.deploy(target_, overrides || {}) as Promise<Ethernaut>;
  }
  override getDeployTransaction(
    target_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(target_, overrides || {});
  }
  override attach(address: string): Ethernaut {
    return super.attach(address) as Ethernaut;
  }
  override connect(signer: Signer): Ethernaut__factory {
    return super.connect(signer) as Ethernaut__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EthernautInterface {
    return new utils.Interface(_abi) as EthernautInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Ethernaut {
    return new Contract(address, _abi, signerOrProvider) as Ethernaut;
  }
}
