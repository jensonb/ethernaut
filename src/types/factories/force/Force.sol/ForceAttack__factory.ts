/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ForceAttack,
  ForceAttackInterface,
} from "../../../force/Force.sol/ForceAttack";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "target",
        type: "address",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610153806100206000396000f3fe60806040526004361061001e5760003560e01c80634b64e49214610023575b600080fd5b610036610031366004610109565b610038565b005b73ffffffffffffffffffffffffffffffffffffffff81166100a05760405162461bcd60e51b815260206004820152600a60248201527f626164207461726765740000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600034116100f05760405162461bcd60e51b815260206004820152600860248201527f6e656564206574680000000000000000000000000000000000000000000000006044820152606401610097565b8073ffffffffffffffffffffffffffffffffffffffff16ff5b60006020828403121561011b57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461013f57600080fd5b939250505056fea164736f6c634300080d000a";

type ForceAttackConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ForceAttackConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ForceAttack__factory extends ContractFactory {
  constructor(...args: ForceAttackConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ForceAttack> {
    return super.deploy(overrides || {}) as Promise<ForceAttack>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ForceAttack {
    return super.attach(address) as ForceAttack;
  }
  override connect(signer: Signer): ForceAttack__factory {
    return super.connect(signer) as ForceAttack__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ForceAttackInterface {
    return new utils.Interface(_abi) as ForceAttackInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ForceAttack {
    return new Contract(address, _abi, signerOrProvider) as ForceAttack;
  }
}
